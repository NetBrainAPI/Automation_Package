{
    "_id": "0818d139-3a0d-72c7-5b7d-9fabe925964e",
    "author": "NetBrain",
    "bizType": "CLI",
    "command": "net show vrf || vrf task list || net show vrf list",
    "createTime": {
        "$date": 1580488015916
    },
    "description": "",
    "devTypes": [
        0
    ],
    "params": [],
    "qualify": null,
    "retrieveScript": "",
    "samples": [
        {
            "content": "cumulus@cumulus:~$net show vrf\r\n\r\nVRF              Table\r\n---------------- -----\r\ndistribution      1001\r\nmanagement        1002\r\nrocket            1003\r\n\r\n\r\ncumulus@cumulus:~$vrf task list\r\n\r\nVRF: distribution    \r\n-----------------------\r\nsshd               2659\r\nbash               2681\r\n\r\nVRF: management      \r\n-----------------------\r\nsu                 2702\r\nbash               2720\r\nvrf                2829\r\n\r\nVRF: rocket          \r\n-----------------------\r\ndhclient           2508\r\n\r\ncumulus@cumulus:~$net show vrf list\r\n\r\nVRF: rocket          \r\n--------------------\r\nswp1             UP             50:02:00:01:00:01 <BROADCAST,MULTICAST,UP,LOWER_UP> \r\n\r\nVRF: management\r\n--------------------\r\neth0              UP     a0:00:00:00:00:11 <BROADCAST,MULTICAST,UP,LOWER_UP>\r\n\r\nVRF: turtle\r\n--------------------\r\nvlan13@bridge     UP     44:38:39:00:00:03 <BROADCAST,MULTICAST,UP,LOWER_UP>\r\nvlan13-v0@vlan13  UP     44:39:39:ff:00:13 <BROADCAST,MULTICAST,UP,LOWER_UP>\r\nvlan24@bridge     UP     44:38:39:00:00:03 <BROADCAST,MULTICAST,UP,LOWER_UP> \r\nvlan24-v0@vlan24  UP     44:39:39:ff:00:24 <BROADCAST,MULTICAST,UP,LOWER_UP>\r\nvlan4001@bridge   UP     44:39:39:ff:40:94 <BROADCAST,MULTICAST,UP,LOWER_UP>",
            "devName": "",
            "identify": "{\"ConfigKey\":{\"MustConditions\":{\"Item\":[]},\"OptionalConditions\":{\"Item\":[]}}}",
            "index": 1,
            "interfaceKeys": [],
            "keyWords": "{\"keyWords\":[]}",
            "name": "sample1",
            "parserRules": "{\"parseRule\":[{\"type\":\"8\",\"script\":\"import re\\r\\ndef ParseText(_original_result):\\r\\n    rex_tableid = re.compile(r' *\\\\s(.*)').search\\r\\n    rex_vrfname=re.compile(\\\"^(\\\\S+)\\\").match\\r\\n    vrf = {\\r\\n        'vrf_name'                      :[],\\r\\n        'vrf_table_id'                  :[],\\r\\n        'interfaces'                    :[],\\r\\n        'tasks'                         :[],\\r\\n        '$_columns':['vrf_name', 'vrf_table_id', 'interfaces', 'tasks', ]\\r\\n        }\\r\\n    #split each of the commands by the line containing the speciffic command\\r\\n    net_show_vrf=re.split(\\\"net show vrf\\\\n\\\", _original_result)\\r\\n    ################# EXTRACT VRF NAMES AND TABLE IDs form the first command 'net show vrf'#####################\\r\\n    vrf_task_list=re.split(\\\"vrf task list\\\\n\\\", net_show_vrf[1])\\r\\n    for i in vrf_task_list[0].splitlines()[3:-1]:\\r\\n        vrf_name=rex_vrfname(i)\\r\\n        vrf_table_id=rex_tableid(i)\\r\\n        if vrf_name: vrf['vrf_name'].append(vrf_name.group(0))\\r\\n        if vrf_table_id: vrf['vrf_table_id'].append(vrf_table_id.group(1))\\r\\n    ################# EXTRACT VRF tasks and the task IDs from the second command 'vrf task list'#####################\\r\\n    vrf_int=re.split(\\\"net show vrf list\\\\n\\\", vrf_task_list[1])\\r\\n    vrfs=re.split(\\\"VRF: \\\", vrf_int[0])\\r\\n    for i in vrfs[1:]:\\r\\n        vrf_name=re.match(\\\"^\\\\S+\\\", i)\\r\\n        if vrf_name:\\r\\n            task_list=''\\r\\n            #go through each line and skip the first two (i.e.,  the vrf name and the '----' )\\r\\n            for j in i.splitlines()[2:-1]:\\r\\n                task_name=re.match(\\\"^(\\\\S+)\\\", j)\\r\\n                if task_name:\\r\\n                    task_list+=task_name.group(0)+', '\\r\\n            #remove the comma and space at the end of the interfaces string\\r\\n            task_list = task_list.strip(', ')\\r\\n        vrf['tasks'].append(task_list)\\r\\n    ################# EXTRACT VRF interfaces from the third command 'net show vrf list'#####################\\r\\n    #split each paragraph by the VRF: $vrf_name pattern\\r\\n    \\r\\n    vrfs=re.split(\\\"VRF: \\\", vrf_int[1])\\r\\n    for i in vrfs[1:]:\\r\\n        vrf_name=re.match(\\\"^\\\\S+\\\", i)\\r\\n        if vrf_name:\\r\\n            int_list=''\\r\\n            #go through each string line by line and skip the first two (i.e.,  the vrf name and the '----' )\\r\\n            for j in i.splitlines()[2:]:\\r\\n                int_name=re.match(\\\"^(\\\\S+)\\\", j)\\r\\n                if int_name:\\r\\n                    int_list+=int_name.group(0)+', '\\r\\n            #remove the comma and space at the end of the interfaces string\\r\\n            int_list = int_list.strip(', ')\\r\\n        #vrf['vrf_name'].append(vrf_name.group(0))\\r\\n        vrf['interfaces'].append(int_list)\\r\\n    dic={'vrf_composite_info':vrf}\\r\\n    return dic\",\"variableTypes\":{\"variableType\":[]},\"tableVariableTypes\":{\"tableVariableType\":[{\"name\":\"$vrf_composite_info\",\"variableTypes\":{\"variableType\":[{\"name\":\"$vrf_name\",\"type\":\"string\"},{\"name\":\"$vrf_table_id\",\"type\":\"string\"},{\"name\":\"$interfaces\",\"type\":\"string\"},{\"name\":\"$tasks\",\"type\":\"string\"}]}}]},\"name\":\"\",\"xxid\":\"36a590a6-2bca-e141-1998-d28740a68ad7\",\"tableKeys\":{\"vrf\":[\"$vrf_table_id\"],\"vrf_composite_info\":[\"$vrf_table_id\"]},\"hashColumns\":{\"vrf\":[\"$vrf_table_id\"],\"vrf_composite_info\":[\"$vrf_table_id\"]},\"hashSort\":{\"vrf\":false}}]}",
            "tableKeys": [
                "_original_result.$vrf_composite_info.$vrf_table_id"
            ]
        }
    ],
    "schemaList": [],
    "sequences": [
        1
    ],
    "structure": {
        "name": null,
        "structure": [
            {
                "attributes": [
                    {
                        "index": 4,
                        "name": "_rowCount",
                        "type": 1
                    },
                    {
                        "index": 5,
                        "name": "_hashCmp",
                        "type": 4
                    }
                ],
                "column": [
                    {
                        "index": 0,
                        "name": "interfaces",
                        "type": 4
                    },
                    {
                        "index": 1,
                        "name": "tasks",
                        "type": 4
                    },
                    {
                        "index": 2,
                        "name": "vrf_name",
                        "type": 4
                    },
                    {
                        "index": 3,
                        "name": "vrf_table_id",
                        "type": 4
                    }
                ],
                "hashColumns": [
                    "vrf_table_id"
                ],
                "hashSort": false,
                "index": 0,
                "name": "vrf_composite_info",
                "type": 11
            }
        ]
    },
    "structureId": "ba06fade57d9014f201c4fb43cfcc127",
    "supportNodeType": 0,
    "type": 1,
    "variables": [
        {
            "capName": "$vrf_composite_info",
            "dataType": "table",
            "desc": "",
            "extraInfo": {
                "hashColumns": [
                    "$vrf_table_id"
                ],
                "hashSort": false
            },
            "fullName": "$vrf_composite_info",
            "intfKey": false,
            "name": "$vrf_composite_info",
            "realType": null,
            "sampleIndex": 1,
            "varType": 3
        },
        {
            "capName": "$vrf_composite_info.$vrf_name",
            "dataType": "string",
            "desc": "",
            "extraInfo": {
                "hashColumns": [],
                "hashSort": false
            },
            "fullName": "$vrf_composite_info.$vrf_name",
            "intfKey": false,
            "name": "$vrf_name",
            "realType": null,
            "sampleIndex": 1,
            "varType": 1
        },
        {
            "capName": "$vrf_composite_info.$vrf_table_id",
            "dataType": "string",
            "desc": "",
            "extraInfo": {
                "hashColumns": [],
                "hashSort": false
            },
            "fullName": "$vrf_composite_info.$vrf_table_id",
            "intfKey": false,
            "name": "$vrf_table_id",
            "realType": null,
            "sampleIndex": 1,
            "varType": 1
        },
        {
            "capName": "$vrf_composite_info.$interfaces",
            "dataType": "string",
            "desc": "",
            "extraInfo": {
                "hashColumns": [],
                "hashSort": false
            },
            "fullName": "$vrf_composite_info.$interfaces",
            "intfKey": false,
            "name": "$interfaces",
            "realType": null,
            "sampleIndex": 1,
            "varType": 1
        },
        {
            "capName": "$vrf_composite_info.$tasks",
            "dataType": "string",
            "desc": "",
            "extraInfo": {
                "hashColumns": [],
                "hashSort": false
            },
            "fullName": "$vrf_composite_info.$tasks",
            "intfKey": false,
            "name": "$tasks",
            "realType": null,
            "sampleIndex": 1,
            "varType": 1
        }
    ],
    "version": "7.1"
}